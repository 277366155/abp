@using Volo.Abp.UI.Navigation
@{
    var elementId = MenuItem.MenuItem.ElementId ?? "MenuItem_" + MenuItem.MenuItem.Name.Replace(".", "_");
    var cssClass = string.IsNullOrEmpty(MenuItem.MenuItem.CssClass) ? string.Empty : MenuItem.MenuItem.CssClass;
    var disabled = MenuItem.MenuItem.IsDisabled ? "disabled" : string.Empty;
    var url = MenuItem.MenuItem.Url == null ? "#" : MenuItem.MenuItem.Url.TrimStart('/', '~');
    var customComponentType = MenuItem.MenuItem.GetComponentTypeOrDefault();
}
@if (MenuItem.MenuItem.IsLeaf)
{
    if (customComponentType != null && typeof(ComponentBase).IsAssignableFrom(customComponentType))
    {
        <DynamicComponent Type="@customComponentType" />
    }
    else if (MenuItem.MenuItem.Url != null)
    {
        <a class="dropdown-item @cssClass @disabled" href="@url" target="@MenuItem.MenuItem.Target" id="@elementId">
            @if (MenuItem.MenuItem.Icon != null)
            {
                <i class="@MenuItem.MenuItem.Icon me-1"></i>
            }
            <span>
                @MenuItem.MenuItem.DisplayName
            </span>
        </a>
    }
}
else
{
    <div class="dropdown-submenu">
        @if (customComponentType != null && typeof(ComponentBase).IsAssignableFrom(customComponentType))
        {
            <DynamicComponent Type="@customComponentType" />
        }
        else
        {
            <a role="button" @onclick="ToggleMenu" class="btn dropdown-toggle" data-toggle="dropdown"
                    aria-haspopup="true" aria-expanded="false">
                @if (MenuItem.MenuItem.Icon != null)
                {
                    <i class="@MenuItem.MenuItem.Icon me-1"></i>
                }
                <span>
                    @MenuItem.MenuItem.DisplayName
                </span>
            </a>
        }
        <div class="dropdown-menu border-0 shadow-sm @(MenuItem.IsOpen ? "show" : "")">
            @foreach (var childMenuItem in MenuItem.Items)
            {
                <SecondLevelNavMenuItem Menu="Menu" MenuItem="childMenuItem" />
            }
        </div>
    </div>
}
